<?xml version="1.0"?>

<!-- Generated by maven-plugin-tools 3.4 on 2017-11-28 -->

<plugin>
	<name>com.liferay.portal.tools.soy.builder</name>
	<description/>
	<groupId>com.liferay</groupId>
	<artifactId>com.liferay.portal.tools.soy.builder</artifactId>
	<version>3.0.3</version>
	<goalPrefix>soy-builder</goalPrefix>
	<isolatedRealm>false</isolatedRealm>
	<inheritedByDefault>true</inheritedByDefault>
	<mojos>
		<mojo>
			<goal>build</goal>
			<description>Compile Closure Templates into JavaScript functions.</description>
			<requiresDirectInvocation>false</requiresDirectInvocation>
			<requiresProject>true</requiresProject>
			<requiresReports>false</requiresReports>
			<aggregator>false</aggregator>
			<requiresOnline>false</requiresOnline>
			<inheritedByDefault>true</inheritedByDefault>
			<implementation>com.liferay.portal.tools.soy.builder.maven.BuildSoyMojo</implementation>
			<language>java</language>
			<instantiationStrategy>per-lookup</instantiationStrategy>
			<executionStrategy>once-per-session</executionStrategy>
			<threadSafe>false</threadSafe>
			<parameters>
				<parameter>
					<name>_baseDir</name>
					<type>java.io.File</type>
					<required>false</required>
					<editable>false</editable>
					<description/>
				</parameter>
				<parameter>
					<name>dir</name>
					<type>java.io.File</type>
					<required>true</required>
					<editable>true</editable>
					<description>The directory containing the .soy files to compile.</description>
				</parameter>
			</parameters>
			<configuration>
				<_baseDir default-value="${project.basedir}" implementation="java.io.File" />
			</configuration>
			<requirements>
				<requirement>
					<role>org.sonatype.plexus.build.incremental.BuildContext</role>
					<field-name>_buildContext</field-name>
				</requirement>
			</requirements>
		</mojo>
		<mojo>
			<goal>config-js-modules</goal>
			<description>Mojo wrapper for Liferay AMD Module Config Generator.</description>
			<requiresDirectInvocation>false</requiresDirectInvocation>
			<requiresProject>true</requiresProject>
			<requiresReports>false</requiresReports>
			<aggregator>false</aggregator>
			<requiresOnline>false</requiresOnline>
			<inheritedByDefault>true</inheritedByDefault>
			<implementation>com.liferay.portal.tools.soy.builder.maven.ConfigJsModulesMojo</implementation>
			<language>java</language>
			<instantiationStrategy>per-lookup</instantiationStrategy>
			<executionStrategy>once-per-session</executionStrategy>
			<threadSafe>false</threadSafe>
			<parameters>
				<parameter>
					<name>_baseDir</name>
					<type>java.io.File</type>
					<required>false</required>
					<editable>false</editable>
					<description/>
				</parameter>
				<parameter>
					<name>config</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The configuration variable to which the modules should be added.</description>
				</parameter>
				<parameter>
					<name>extension</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>Use the provided string as an extension instead to get it automatically from the file name.</description>
				</parameter>
				<parameter>
					<name>filePattern</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The pattern to be used in order to find files for processing.</description>
				</parameter>
				<parameter>
					<name>format</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>Regex and value which will be applied to the file name when generating the module name.</description>
				</parameter>
				<parameter>
					<name>ignorePath</name>
					<type>boolean</type>
					<required>false</required>
					<editable>true</editable>
					<description>Do not create module path and fullPath properties.</description>
				</parameter>
				<parameter>
					<name>input</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The path to the js files to be configured.</description>
				</parameter>
				<parameter>
					<name>moduleConfig</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>JSON file which contains configuration data for the modules, for example module prefix.</description>
				</parameter>
				<parameter>
					<name>modulePath</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The path to the node module to be executed.</description>
				</parameter>
				<parameter>
					<name>moduleRoot</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The folder which will be used as starting point from which the module name should be generated.</description>
				</parameter>
				<parameter>
					<name>namespace</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The namespace that should be used for \"define\" and \"require\" calls.</description>
				</parameter>
				<parameter>
					<name>nodePath</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The path to the node executable.</description>
				</parameter>
				<parameter>
					<name>output</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>Output file to store the generated configuration.</description>
				</parameter>
				<parameter>
					<name>workingPath</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The working path (directory) of the process to be executed..</description>
				</parameter>
			</parameters>
			<configuration>
				<_baseDir default-value="${project.basedir}" implementation="java.io.File" />
				<filePattern default-value="**/*.js" implementation="java.lang.String" />
				<ignorePath default-value="false" implementation="boolean" />
			</configuration>
			<requirements>
				<requirement>
					<role>org.sonatype.plexus.build.incremental.BuildContext</role>
					<field-name>_buildContext</field-name>
				</requirement>
			</requirements>
		</mojo>
		<mojo>
			<goal>replace-translation</goal>
			<description>Replace 'goog.getMsg' definitions.</description>
			<requiresDirectInvocation>false</requiresDirectInvocation>
			<requiresProject>true</requiresProject>
			<requiresReports>false</requiresReports>
			<aggregator>false</aggregator>
			<requiresOnline>false</requiresOnline>
			<inheritedByDefault>true</inheritedByDefault>
			<implementation>com.liferay.portal.tools.soy.builder.maven.ReplaceSoyTranslationMojo</implementation>
			<language>java</language>
			<instantiationStrategy>per-lookup</instantiationStrategy>
			<executionStrategy>once-per-session</executionStrategy>
			<threadSafe>false</threadSafe>
			<parameters>
				<parameter>
					<name>_baseDir</name>
					<type>java.io.File</type>
					<required>false</required>
					<editable>false</editable>
					<description/>
				</parameter>
				<parameter>
					<name>dir</name>
					<type>java.io.File</type>
					<required>true</required>
					<editable>true</editable>
					<description>The directory containing the .soy.js files to process.</description>
				</parameter>
			</parameters>
			<configuration>
				<_baseDir default-value="${project.basedir}" implementation="java.io.File" />
			</configuration>
			<requirements>
				<requirement>
					<role>org.sonatype.plexus.build.incremental.BuildContext</role>
					<field-name>_buildContext</field-name>
				</requirement>
			</requirements>
		</mojo>
		<mojo>
			<goal>transpile-js</goal>
			<description>Invoke metal CLI to transpile Soy to JS.</description>
			<requiresDirectInvocation>false</requiresDirectInvocation>
			<requiresProject>true</requiresProject>
			<requiresReports>false</requiresReports>
			<aggregator>false</aggregator>
			<requiresOnline>false</requiresOnline>
			<inheritedByDefault>true</inheritedByDefault>
			<implementation>com.liferay.portal.tools.soy.builder.maven.TranspileJsMojo</implementation>
			<language>java</language>
			<instantiationStrategy>per-lookup</instantiationStrategy>
			<executionStrategy>once-per-session</executionStrategy>
			<threadSafe>false</threadSafe>
			<parameters>
				<parameter>
					<name>_baseDir</name>
					<type>java.io.File</type>
					<required>false</required>
					<editable>false</editable>
					<description/>
				</parameter>
				<parameter>
					<name>bundleFileName</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The name of the final bundle file, for formats (like "globals") that create one.</description>
				</parameter>
				<parameter>
					<name>dest</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The directory where the compiled files will be stored. If multiple formats are given, multiple destinations can also be given, one for each format, in the same order.</description>
				</parameter>
				<parameter>
					<name>format</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The format(s) that the source files will be built to.</description>
				</parameter>
				<parameter>
					<name>globalName</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>Only used by the "globals" format build. The name of the global variable that will hold exported modules.</description>
				</parameter>
				<parameter>
					<name>moduleName</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>Only used by the "amd" format build. The name of the project that is being compiled. All built modules will be stored in a folder with this name.</description>
				</parameter>
				<parameter>
					<name>modulePath</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The path to the node module to be executed.</description>
				</parameter>
				<parameter>
					<name>nodePath</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The path to the node executable.</description>
				</parameter>
				<parameter>
					<name>soyDeps</name>
					<type>java.util.List</type>
					<required>false</required>
					<editable>true</editable>
					<description>Soy files that the main source files depend on, but that shouldn't be compiled as well. The soy compiler needs these files.</description>
				</parameter>
				<parameter>
					<name>soyDest</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The directory where the compiled files will be stored.</description>
				</parameter>
				<parameter>
					<name>soySrcs</name>
					<type>java.util.List</type>
					<required>false</required>
					<editable>true</editable>
					<description>The path globs to the soy files to be compiled.</description>
				</parameter>
				<parameter>
					<name>srcs</name>
					<type>java.util.List</type>
					<required>false</required>
					<editable>true</editable>
					<description>The path globs to the js files to be compiled.</description>
				</parameter>
				<parameter>
					<name>workingPath</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The working path (directory) of the process to be executed..</description>
				</parameter>
			</parameters>
			<configuration>
				<_baseDir default-value="${project.basedir}" implementation="java.io.File" />
			</configuration>
			<requirements>
				<requirement>
					<role>org.sonatype.plexus.build.incremental.BuildContext</role>
					<field-name>_buildContext</field-name>
				</requirement>
			</requirements>
		</mojo>
		<mojo>
			<goal>wrap-alloy-template</goal>
			<description>Wrap Soy templates into AlloyUI modules.</description>
			<requiresDirectInvocation>false</requiresDirectInvocation>
			<requiresProject>true</requiresProject>
			<requiresReports>false</requiresReports>
			<aggregator>false</aggregator>
			<requiresOnline>false</requiresOnline>
			<inheritedByDefault>true</inheritedByDefault>
			<implementation>com.liferay.portal.tools.soy.builder.maven.WrapSoyAlloyTemplateMojo</implementation>
			<language>java</language>
			<instantiationStrategy>per-lookup</instantiationStrategy>
			<executionStrategy>once-per-session</executionStrategy>
			<threadSafe>false</threadSafe>
			<parameters>
				<parameter>
					<name>_baseDir</name>
					<type>java.io.File</type>
					<required>false</required>
					<editable>false</editable>
					<description/>
				</parameter>
				<parameter>
					<name>dir</name>
					<type>java.io.File</type>
					<required>true</required>
					<editable>true</editable>
					<description>The directory containing the .soy.js files to process.</description>
				</parameter>
				<parameter>
					<name>moduleName</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The AlloyUI module name.</description>
				</parameter>
				<parameter>
					<name>namespace</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>true</editable>
					<description>The Soy template namespace.</description>
				</parameter>
			</parameters>
			<configuration>
				<_baseDir default-value="${project.basedir}" implementation="java.io.File" />
			</configuration>
			<requirements>
				<requirement>
					<role>org.sonatype.plexus.build.incremental.BuildContext</role>
					<field-name>_buildContext</field-name>
				</requirement>
			</requirements>
		</mojo>
	</mojos>
	<dependencies>
		<dependency>
			<groupId>com.google.template</groupId>
			<artifactId>soy</artifactId>
			<type>jar</type>
			<version>2015-04-10</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<type>jar</type>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<type>jar</type>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-assistedinject</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-multibindings</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<type>jar</type>
			<version>17.0</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm</artifactId>
			<type>jar</type>
			<version>5.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-commons</artifactId>
			<type>jar</type>
			<version>5.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-tree</artifactId>
			<type>jar</type>
			<version>5.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-util</artifactId>
			<type>jar</type>
			<version>5.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-analysis</artifactId>
			<type>jar</type>
			<version>5.0.3</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<type>jar</type>
			<version>51.1</version>
		</dependency>
		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<type>jar</type>
			<version>2.0.26</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<type>jar</type>
			<version>2.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<type>jar</type>
			<version>3.0.20</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.plexus</groupId>
			<artifactId>plexus-build-api</artifactId>
			<type>jar</type>
			<version>0.0.7</version>
		</dependency>
	</dependencies>
</plugin>