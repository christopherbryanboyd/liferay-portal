import com.bmuschko.gradle.docker.tasks.container.DockerLogsContainer

import java.net.InetAddress;

buildscript {
	dependencies {
		classpath fileTree(dir: pluginClasspathDir, excludes: ["biz.aQute.bnd-3.5.0.jar", "com.liferay.gradle.util-1.0.33.jar"], include: "*.jar")
	}
}

apply plugin: "com.liferay.workspace"

def expectedLine = "org.apache.catalina.startup.Catalina"

gradle.liferayWorkspace {
	dockerImageId = InetAddress.getLocalHost().getCanonicalHostName().toLowerCase() + 'startdockercontainer'
	dockerContainerId = InetAddress.getLocalHost().getCanonicalHostName().toLowerCase() + 'startdockercontainer'
}

gradle.projectsEvaluated {
	gradle.rootProject.tasks.register("assertScript", DockerLogsContainer) {
		dependsOn gradle.rootProject.tasks.startDockerContainer
		finalizedBy gradle.rootProject.tasks.cleanDockerImage
		tailAll = true
		follow = false
		targetContainerId {
			gradle.liferayWorkspace.dockerContainerId
		}

		boolean expectedLineDetected = false

		sink new PrintWriter(new StringWriter()) {
			public void write(String line) {
				if (line.contains(expectedLine)) {
					expectedLineDetected = true
				}
				gradle.rootProject.print line
			}
		}

		doLast {
			int retries = 0

			while (!expectedLineDetected && retries < 50) {
				Thread.sleep(100)
				retries++
				start()
			}

			if (!expectedLineDetected) {
				throw new GradleException("The expected line " + expectedLine + " was not found in the log.")
			}
		}
	}
}